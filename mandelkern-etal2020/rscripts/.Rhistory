nrow(t)
table(t$trigger)
str(t)
table(t$Answer)
table(results$trigger)
table(t$trigger)
# packages
library(tidyverse)
# this R script is based on the R script downloaded from the OSF repo provided in
# Mandelkern et al 2020 (https://osf.io/jwcvr)
# it calls the data from Exp 3
# packages
library(tidyverse)
library(reshape2)
library(plyr)
library(ggplot2)
library(lme4)
require(scales)
# load helpers
source('../../results/helpers.R')
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
# read data
results <- read.csv("../data/IncrSymAccResults.txt", comment.char="#", header=F)
# assign column names
names(results) <- c("ReceptionTime", "IP", "Controller", "It", "Elements", "Type", "Group", "Question", "Answer", "Time")
# subset the data
meta <- subset(results, Controller!="DynamicQuestion")
results <- subset(results, Controller=="DynamicQuestion")
# Since we used '+' as a separating char, we replace the one in 'p+'
results$Question <- sub("[+][+]", "p+", results$Question)
results <- cbind(results, colsplit(results$Question, "[+]", c("item","group","condition","inference_about", "trigger", "sentence", "inference")))
# Creating subject IDs by combining IP and time
results$subject <- paste(results$IP, results$ReceptionTime)
length(unique(results$subject))
#[1] 126
# remove practice trials
practice <- subset(results, Type=="practice")
results <- subset(results, Type!="practice")
# make Answers numeric
results$Answer <- as.numeric(as.character(results$Answer))
# inference_about codes the context (Explicit Ignorance, Support)
table(results$inference_about)
# "trigger" codes the expression (- means no trigger)
table(results$trigger)
# select relevant columns
results = results %>%
select(c("Answer","item","condition","inference_about","trigger","sentence","inference","subject"))
# code whether something was a ps or not
results$ps <- "not presupposition"
results$ps[results$trigger=="aware"|results$trigger=="happy"|results$trigger=="stop"|results$trigger=="continue"] <- "presupposition"
table(results$trigger, results$ps)
# item coding: items with numbers above 40 don't have "If..."-sentence (filler)
results$item <- as.numeric(results$item)
# remove such rows from the dataset
results <- results %>%
filter(item <= 40)
# remove the rows without a trigger
results <- results %>%
filter(trigger != "-")
table(results$trigger)
# Fig A: plot of mean naturalness ratings in explicit ignorance context ----
# target data: explicit ignorance context
t = results %>%
filter(inference_about == "ExplicitIgnoranceP")
nrow(t)
table(t$trigger)
str(t)
table(t$Answer) #0-6
# calculate mean naturalness rating by expression in explicit ignorance context
nat.meansEIC = t %>%
group_by(trigger) %>%
summarize(Mean = mean(Answer), CILow = ci.low(Answer), CIHigh = ci.high(Answer)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(trigger),Mean))
nat.meansEIC = t %>%
group_by(trigger) %>%
summarize(Mean = mean(Answer), CILow = ci.low(Answer), CIHigh = ci.high(Answer))
nat.meansEIC
detach("package:plyr", unload = TRUE)
# this R script is based on the R script downloaded from the OSF repo provided in
# Mandelkern et al 2020 (https://osf.io/jwcvr)
# it calls the data from Exp 3
# packages
library(tidyverse)
#library(reshape2)
#library(plyr)
#library(ggplot2)
#library(lme4)
#require(scales)
# load helpers
source('../../results/helpers.R')
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
# read data
results <- read.csv("../data/IncrSymAccResults.txt", comment.char="#", header=F)
# assign column names
names(results) <- c("ReceptionTime", "IP", "Controller", "It", "Elements", "Type", "Group", "Question", "Answer", "Time")
# subset the data
meta <- subset(results, Controller!="DynamicQuestion")
results <- subset(results, Controller=="DynamicQuestion")
# Since we used '+' as a separating char, we replace the one in 'p+'
results$Question <- sub("[+][+]", "p+", results$Question)
results <- cbind(results, colsplit(results$Question, "[+]", c("item","group","condition","inference_about", "trigger", "sentence", "inference")))
# Creating subject IDs by combining IP and time
results$subject <- paste(results$IP, results$ReceptionTime)
length(unique(results$subject))
#[1] 126
# remove practice trials
practice <- subset(results, Type=="practice")
results <- subset(results, Type!="practice")
# make Answers numeric
results$Answer <- as.numeric(as.character(results$Answer))
# inference_about codes the context (Explicit Ignorance, Support)
table(results$inference_about)
# "trigger" codes the expression (- means no trigger)
table(results$trigger)
# select relevant columns
results = results %>%
select(c("Answer","item","condition","inference_about","trigger","sentence","inference","subject"))
# code whether something was a ps or not
results$ps <- "not presupposition"
results$ps[results$trigger=="aware"|results$trigger=="happy"|results$trigger=="stop"|results$trigger=="continue"] <- "presupposition"
table(results$trigger, results$ps)
# item coding: items with numbers above 40 don't have "If..."-sentence (filler)
results$item <- as.numeric(results$item)
# remove such rows from the dataset
results <- results %>%
filter(item <= 40)
# remove the rows without a trigger
results <- results %>%
filter(trigger != "-")
table(results$trigger)
# target data: explicit ignorance context
t = results %>%
filter(inference_about == "ExplicitIgnoranceP")
nrow(t)
table(t$trigger)
str(t)
table(t$Answer) #0-6
# calculate mean naturalness rating by expression in explicit ignorance context
nat.meansEIC = t %>%
group_by(trigger) %>%
summarize(Mean = mean(Answer), CILow = ci.low(Answer), CIHigh = ci.high(Answer)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(trigger),Mean))
nat.meansEIC
levels(nat.meansEIC$expression)
# color code the expressions
ps <- c("aware", "continue", "happy", "stop")
noPs <- c("enjoy", "frown on","hoping","sure")
# color code the expressions
ps <- c("aware", "continue", "happy", "stop")
noPs <- c("enjoy", "frown on","hoping","sure")
nat.meansEIC$ps = ifelse(nat.meansEIC$expression %in% noPs, "noPs",
ifelse(nat.meansEIC$expression %in% ps, "ps", "other"))
table(nat.meansEIC$ps)
t$ps = ifelse(t$expression %in% noPs, "noPs",
ifelse(t$expression %in% ps, "ps", "other"))
t$expression = t$trigger
t$ps = ifelse(t$expression %in% noPs, "noPs",
ifelse(t$expression %in% ps, "ps", "other"))
table(t$ps)
table(nat.meansEIC$ps, nat.meansEIC$expression)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$context == "explicitIgnorance",],aes(x=expression, y=response),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('#D55E00','black','#009E73')) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
text.color <- ifelse(nat.meansEIC$expression[order(nat.meansEIC$Mean)] %in% ps, '#D55E00',
ifelse(nat.meansEIC$expression[order(nat.meansEIC$Mean)] %in% noPs, "black", "#009E73"))
text.color
t$expression = factor(t$expression, levels = nat.meansEIC$expression[order(nat.meansEIC$Mean)], ordered = TRUE)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$context == "explicitIgnorance",],aes(x=expression, y=response),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('#D55E00','black','#009E73')) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$inference_about == "ExplicitIgnoranceP",],aes(x=expression, y=Answer),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('#D55E00','black','#009E73')) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$inference_about == "ExplicitIgnoranceP",],aes(x=expression, y=Answer),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('#D55E00','black','#009E73')) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0","1"")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$inference_about == "ExplicitIgnoranceP",],aes(x=expression, y=Answer),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('black','#D55E00')) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0","1"")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
ggsave("../graphs/explicit-ignorance-naturalness-by-expression.pdf",height=3,width=6)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_violin(data=t[t$inference_about == "ExplicitIgnoranceP",],aes(x=expression, y=Answer),
scale="width",color="gray80", fill = "gray80") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('black','#D55E00')) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0","1"")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
ggsave("../graphs/explicit-ignorance-naturalness-by-expression.pdf",height=3,width=6)
# plot of naturalness means, with participants' individual responses
ggplot(nat.meansEIC, aes(x=expression, y=Mean)) +
geom_violin(data=t[t$inference_about == "ExplicitIgnoranceP",],aes(x=expression, y=Answer),
scale="width",color="gray80", fill = "gray80") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(aes(group = ps, fill = ps), shape=21,stroke=.5,size=3, color="black") +
scale_fill_manual(values=c('black','#D55E00')) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0","1"")) +
guides(fill=FALSE) +
theme(legend.position="top", panel.grid.major.x = element_blank()) +
ylab("Mean naturalness rating \n in explicit ignorance context") +
xlab("Expression") +
#theme_dark() +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1, color = text.color))
ggsave("../graphs/explicit-ignorance-naturalness-by-expression.pdf",height=3,width=6)
nat.means = results %>%
group_by(trigger,inference_about) %>%
summarize(Mean = mean(Answer), CILow = ci.low(Answer), CIHigh = ci.high(Answer)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(context = as.factor(inference_about))
nat.means
table(nat.means$context)
nat.means$expression <- as.factor(nat.means$expression)
nat.means$trigger <- as.factor(nat.means$trigger)
# order predicates by mean naturalness rating in EIC
tmp <- results %>%
filter(inference_about == "ExplicitIgnoranceP") %>%
group_by(trigger) %>%
summarize(Mean = mean(Answer)) %>%
mutate(expression = fct_reorder(as.factor(trigger),Mean))
tmp
levels(tmp$expression)
nat.means$trigger = factor(nat.means$trigger, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
results$trigger = factor(results$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
results$trigger = factor(results$trigger, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
levels(nat.means$trigger)
levels(results$trigger)
context
nat.means
nat.means = results %>%
group_by(trigger,inference_about) %>%
summarize(Mean = mean(Answer), CILow = ci.low(Answer), CIHigh = ci.high(Answer)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(context = as.factor(inference_about))
nat.means
table(nat.means$context)
# order the contexts
levels(nat.means$context)
nat.means$context = factor(nat.means$context, levels = c("ExplicitIgnoranceP", "SupportP"))
levels(results$inference_about)
levels(results$inference_about)
levels(results$inference_about)
table(results$inference_about)
table(results$inference_about)
levels(results$inference_about)
results$inference_about = as.factor(results$inference_about)
levels(results$inference_about)
results$inference_about = factor(results$inference_about, levels = c("ExplicitIgnoranceP", "SupportP"))
fill.color <- ifelse(levels(nat.means$expression) %in% ps, '#D55E00', "black")
fill.color <- ifelse(levels(nat.means$trigger) %in% ps, '#D55E00', "black")
fill.color
# to color the facets differently
library(ggh4x)
strip <- strip_themed(background_x = elem_list_rect(fill = fill.color))
nat.means
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL)
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black"))
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black"))
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
# violinplot
ggplot() +
#geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 1, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 1, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
# violinplot
ggplot() +
geom_violin(data=results, aes(x=inference_about, y=Answer, fill = inference_about), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'support')) +
scale_x_discrete(breaks = NULL) +
#scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ trigger, nrow = 1, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "white"))
ggsave("../graphs/naturalness-by-context-and-expression.pdf",height=3,width=9)

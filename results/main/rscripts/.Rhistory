geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right"))
contrasts$context = factor(contrasts$context, levels = c("explicitIgnorance", "factL", "factH"))
contrasts$expression = as.factor(contrasts$expression)
contrasts$linetype <- as.integer(contrasts$linetype)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
nat.means = d %>%
filter(expression != "practice" & expression != "controlGood1" & expression != "controlGood2" & expression != "controlGood3" & expression != "controlGood4") %>%
filter(expression != "also" & expression != "too" & expression != "again" & expression != "cleft" &
expression != "stop" & expression != "continue") %>%
group_by(expression,context) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
ungroup %>%
select(-c(CILow,CIHigh)) %>%
mutate(context = as.factor(context))
nat.means
table(nat.means$context)
nat.means$expression <- as.factor(nat.means$expression)
levels(nat.means$expression)
t = d %>%
filter(expression != "practice" & expression != "controlGood1" & expression != "controlGood2" & expression != "controlGood3" & expression != "controlGood4") %>%
filter(expression != "also" & expression != "too" & expression != "again" & expression != "cleft" &
expression != "stop" & expression != "continue") %>%
mutate(context = as.factor(context))
levels(t$context)
# order predicates by mean naturalness rating in EIC
tmp <- t %>%
filter(context == "explicitIgnorance") %>%
group_by(expression) %>%
summarize(Mean = mean(response)) %>%
mutate(expression = fct_reorder(as.factor(expression),Mean))
tmp
levels(tmp$expression)
nat.means$expression = factor(nat.means$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
t$expression = factor(t$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
levels(nat.means$expression)
levels(t$expression)
# order the contexts: EIC, low, high
levels(nat.means$context)
nat.means$context = factor(nat.means$context, levels = c("explicitIgnorance", "factL", "factH"))
levels(t$context)
t$context = factor(t$context, levels = c("explicitIgnorance", "factL", "factH"))
fill.color <- ifelse(levels(nat.means$expression) %in% factives, '#D55E00', "#009E73")
fill.color
# to color the facets differently
library(ggh4x)
strip <- strip_themed(background_x = elem_list_rect(fill = fill.color))
nat.means
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
view(contrasts)
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right"))
contrasts$context = factor(contrasts$context, levels = c("explicitIgnorance", "factL", "factH"))
contrasts$expression = as.factor(contrasts$expression)
contrasts$linetype <- as.integer(contrasts$linetype)
contrasts$expression = factor(contrasts$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
contrasts = data.frame(expression = character(), contrast = character(), linetype = numeric())
contrasts
# linetypes
# 0 blank
# 1 solid
# 2 dashed
# 3 dotted
for (p in predicates) {
for (i in 1:nrow(get(paste("pairwise.",p,sep="")))) {
print(i)
cntrst = get(paste("pairwise.",p,sep=""))$contrast[i]
lower = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.lower
upper = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.upper
value = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.value
l = ifelse(lower <= 0 & upper >= 0, 6,
ifelse(lower < 0 & upper < 0 & value <= -1.5, 1,
ifelse(lower < 0 & upper < 0 & -1.5 < value & value <= -0.5, 2,
ifelse(lower < 0 & upper < 0 & -.5 < value & value <= 0, 3,
ifelse(lower > 0 & upper > 0 & value >= 1.5, 1,
ifelse(lower > 0 & upper > 0 & 1.5 > value & value > 0.5, 2,
ifelse(lower > 0 & upper > 0 & .5 > value & value >= 0, 3, 666)))))))
contrasts = contrasts %>%
add_row(expression = p, contrast = cntrst, linetype = l)
}
}
contrasts
contrasts = data.frame(contrasts)
names(contrasts)
# make column for context
contrasts = contrasts %>%
mutate(context = case_when(contrast == "explicitIgnorance - factH" ~ "explicitIgnorance",
contrast == "explicitIgnorance - factL" ~ "factL",
contrast == "factL - factH" ~ "factH",
TRUE ~ "error"))
# now add the needed line values based on context
# explicitIgnorance (EIC-factH): x=1,xend=3,y=-.15,yend=-.15
# factL (EIC-factL): x=1,xend=2,y=-.05,yend=-.05
# factH (factL-factH): x=2,xend=3,y=-.1,yend=-.1
contrasts = contrasts %>%
mutate(x = case_when(context == "explicitIgnorance" ~ 1,
context == "factL" ~ 1,
context == "factH" ~ 2,
TRUE ~ 666)) %>%
mutate(xend = case_when(context == "explicitIgnorance" ~ 3,
context == "factL" ~ 2,
context == "factH" ~ 3,
TRUE ~ 666)) %>%
mutate(y = case_when(context == "explicitIgnorance" ~ -.15,
context == "factL" ~ -.05,
context == "factH" ~ -.1,
TRUE ~ 666)) %>%
mutate(yend = case_when(context == "explicitIgnorance" ~ -.15,
context == "factL" ~ -.05,
context == "factH" ~ -.1,
TRUE ~ 666))
write_csv(contrasts, file="../data/contrasts.csv")
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right"))
contrasts$context = factor(contrasts$context, levels = c("explicitIgnorance", "factL", "factH"))
contrasts$expression = as.factor(contrasts$expression)
contrasts$linetype <- as.integer(contrasts$linetype)
contrasts$expression = factor(contrasts$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right")) %>%
filter(linetype = "6")
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right")) %>%
filter(linetype = 6)
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right")) %>%
filter(linetype == 6)
contrasts$context = factor(contrasts$context, levels = c("explicitIgnorance", "factL", "factH"))
contrasts$expression = as.factor(contrasts$expression)
contrasts$linetype <- as.integer(contrasts$linetype)
contrasts$expression = factor(contrasts$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
view(contrasts)
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right")) %>%
filter(linetype == 6)
view(contrasts)
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right")) %>%
filter(linetype != 6)
contrasts$context = factor(contrasts$context, levels = c("explicitIgnorance", "factL", "factH"))
contrasts$expression = as.factor(contrasts$expression)
contrasts$linetype <- as.integer(contrasts$linetype)
contrasts$expression = factor(contrasts$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
view(contrasts)
ggsave("../graphs/naturalness-by-context-and-predicate-with-stats.pdf",height=4.5,width=9)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
ggsave("../graphs/naturalness-by-context-and-predicate-with-stats.pdf",height=4.5,width=9)
contrasts = data.frame(expression = character(), contrast = character(), linetype = numeric())
contrasts
# linetypes
# 0 blank
# 1 solid
# 2 dashed
# 3 dotted
for (p in predicates) {
for (i in 1:nrow(get(paste("pairwise.",p,sep="")))) {
print(i)
cntrst = get(paste("pairwise.",p,sep=""))$contrast[i]
lower = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.lower
upper = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.upper
value = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.value
l = ifelse(lower <= 0 & upper >= 0, 6,
ifelse(lower < 0 & upper < 0 & value <= -1.5, 1,
ifelse(lower < 0 & upper < 0 & -1.5 < value & value <= -0.5, 5,
ifelse(lower < 0 & upper < 0 & -.5 < value & value <= 0, 3,
ifelse(lower > 0 & upper > 0 & value >= 1.5, 1,
ifelse(lower > 0 & upper > 0 & 1.5 > value & value > 0.5, 5,
ifelse(lower > 0 & upper > 0 & .5 > value & value >= 0, 3, 666)))))))
contrasts = contrasts %>%
add_row(expression = p, contrast = cntrst, linetype = l)
}
}
contrasts
contrasts = data.frame(contrasts)
names(contrasts)
# make column for context
contrasts = contrasts %>%
mutate(context = case_when(contrast == "explicitIgnorance - factH" ~ "explicitIgnorance",
contrast == "explicitIgnorance - factL" ~ "factL",
contrast == "factL - factH" ~ "factH",
TRUE ~ "error"))
# now add the needed line values based on context
# explicitIgnorance (EIC-factH): x=1,xend=3,y=-.15,yend=-.15
# factL (EIC-factL): x=1,xend=2,y=-.05,yend=-.05
# factH (factL-factH): x=2,xend=3,y=-.1,yend=-.1
contrasts = contrasts %>%
mutate(x = case_when(context == "explicitIgnorance" ~ 1,
context == "factL" ~ 1,
context == "factH" ~ 2,
TRUE ~ 666)) %>%
mutate(xend = case_when(context == "explicitIgnorance" ~ 3,
context == "factL" ~ 2,
context == "factH" ~ 3,
TRUE ~ 666)) %>%
mutate(y = case_when(context == "explicitIgnorance" ~ -.15,
context == "factL" ~ -.05,
context == "factH" ~ -.1,
TRUE ~ 666)) %>%
mutate(yend = case_when(context == "explicitIgnorance" ~ -.15,
context == "factL" ~ -.05,
context == "factH" ~ -.1,
TRUE ~ 666))
write_csv(contrasts, file="../data/contrasts.csv")
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right")) %>%
filter(linetype != 6)
contrasts$context = factor(contrasts$context, levels = c("explicitIgnorance", "factL", "factH"))
contrasts$expression = as.factor(contrasts$expression)
contrasts$linetype <- as.integer(contrasts$linetype)
contrasts$expression = factor(contrasts$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
ggsave("../graphs/naturalness-by-context-and-predicate-with-stats.pdf",height=4.5,width=9)
contrasts = data.frame(expression = character(), contrast = character(), linetype = numeric())
contrasts
# linetypes
# 0 blank
# 1 solid
# 2 dashed
# 3 dotted
for (p in predicates) {
for (i in 1:nrow(get(paste("pairwise.",p,sep="")))) {
print(i)
cntrst = get(paste("pairwise.",p,sep=""))$contrast[i]
lower = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.lower
upper = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.upper
value = get(paste("pairwise.",p,sep=""))[get(paste("pairwise.",p,sep=""))$contrast == cntrst,]$.value
l = ifelse(lower <= 0 & upper >= 0, 0,
ifelse(lower < 0 & upper < 0 & value <= -1.5, 1,
ifelse(lower < 0 & upper < 0 & -1.5 < value & value <= -0.5, 6,
ifelse(lower < 0 & upper < 0 & -.5 < value & value <= 0, 3,
ifelse(lower > 0 & upper > 0 & value >= 1.5, 1,
ifelse(lower > 0 & upper > 0 & 1.5 > value & value > 0.5, 6,
ifelse(lower > 0 & upper > 0 & .5 > value & value >= 0, 3, 666)))))))
contrasts = contrasts %>%
add_row(expression = p, contrast = cntrst, linetype = l)
}
}
contrasts
contrasts = data.frame(contrasts)
names(contrasts)
# make column for context
contrasts = contrasts %>%
mutate(context = case_when(contrast == "explicitIgnorance - factH" ~ "explicitIgnorance",
contrast == "explicitIgnorance - factL" ~ "factL",
contrast == "factL - factH" ~ "factH",
TRUE ~ "error"))
# now add the needed line values based on context
# explicitIgnorance (EIC-factH): x=1,xend=3,y=-.15,yend=-.15
# factL (EIC-factL): x=1,xend=2,y=-.05,yend=-.05
# factH (factL-factH): x=2,xend=3,y=-.1,yend=-.1
contrasts = contrasts %>%
mutate(x = case_when(context == "explicitIgnorance" ~ 1,
context == "factL" ~ 1,
context == "factH" ~ 2,
TRUE ~ 666)) %>%
mutate(xend = case_when(context == "explicitIgnorance" ~ 3,
context == "factL" ~ 2,
context == "factH" ~ 3,
TRUE ~ 666)) %>%
mutate(y = case_when(context == "explicitIgnorance" ~ -.15,
context == "factL" ~ -.05,
context == "factH" ~ -.1,
TRUE ~ 666)) %>%
mutate(yend = case_when(context == "explicitIgnorance" ~ -.15,
context == "factL" ~ -.05,
context == "factH" ~ -.1,
TRUE ~ 666))
write_csv(contrasts, file="../data/contrasts.csv")
# join results of statistical analysis with nat.means
contrasts = read_csv("../data/contrasts.csv")
view(contrasts)
contrasts = contrasts %>%
select(-c(contrast)) %>%
select(c(expression,context,x,xend,y,yend,linetype)) %>%
mutate(expression = recode(expression,"be.annoyed" = "be annoyed", "be.right" = "be right")) %>%
filter(linetype != 0)
contrasts$context = factor(contrasts$context, levels = c("explicitIgnorance", "factL", "factH"))
contrasts$expression = as.factor(contrasts$expression)
contrasts$linetype <- as.integer(contrasts$linetype)
contrasts$expression = factor(contrasts$expression, levels=tmp$expression[order(tmp$expression)], ordered=TRUE)
# violinplot
ggplot() +
geom_violin(data=t, aes(x=context, y=response, fill = context), scale="width", linewidth = 0) +
geom_point(data=nat.means, aes(x=context, y=Mean, fill = context), shape=21,stroke=.5,size=2, color="black") +
geom_errorbar(data=nat.means,aes(x=context,ymin=YMin,ymax=YMax),width=0.1,color="black") +
scale_fill_manual(values=c('gray80',"#56B4E9",'#F0E442'),
name = "Context",
labels=c('explicit ignorance', 'lower prior probability','higher prior probability')) +
scale_x_discrete(breaks = NULL) +
scale_y_continuous(limits = c(-.15,1), breaks = seq(0,1,.2), labels = c("0",".2",".4",".6",".8","1")) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank()) +
theme(legend.position="top") +
guides(linetype = "none") +
ylab("Mean naturalness rating") +
xlab("Context") +
facet_wrap2(. ~ expression, nrow = 2, strip = strip) +
theme(panel.grid.minor = element_blank()) +
theme(strip.background = element_rect(fill="white")) +
theme(strip.text = element_text(color = "black")) +
geom_segment(data = contrasts, aes(x=x,xend=xend,y=y,yend=yend, linetype = as.factor(linetype)))
ggsave("../graphs/naturalness-by-context-and-predicate-with-stats.pdf",height=4.5,width=9)
